server:
  port: ${SERVER_PORT:80}
  forward-headers-strategy: framework
  tomcat:
    max-swallow-size: 1

app:
  secret: ${APP_SECRET:c04nKbDFfJ2v0XSRtNKHQQq5Km3zMSZxla7paMSUzBOI/ORhgnTC7eJrqqEZQGKm}
  jwt:
    token:
      expires-in: ${APP_JWT_TOKEN_EXPIRES_IN:#{60 * 60 * 1000}} # 60 minutes in milliseconds
    refresh-token:
      expires-in: ${APP_JWT_REFRESH_TOKEN_EXPIRES_IN:#{24 * 60 * 60 * 1000}} # 24 hours in milliseconds
    remember-me:
      expires-in: ${APP_JWT_REMEMBER_ME_EXPIRES_IN:#{24 * 60 * 60 * 1000 * 7}} # 7 days in milliseconds
  registration:
    email:
      token:
        expires-in: ${APP_REGISTRATION_EMAIL_TOKEN_EXPIRES_IN:#{60 * 60 * 1000}} # 60 minutes in milliseconds
    password:
      token:
        expires-in: ${APP_REGISTRATION_PASSWORD_TOKEN_EXPIRES_IN:#{60 * 60 * 1000}} # 60 minutes in milliseconds
  default-locale: ${APP_DEFAULT_LOCALE:en}
  default-timezone: ${APP_DEFAULT_TIMEZONE:Europe/Istanbul}
  url: ${APP_URL:http://localhost:${server.port}}
  frontend-url: ${APP_FRONTEND_URL:http://localhost:3000}
  backend-url: ${APP_BACKEND_URL:http://149.200.255.97:37676}
  models:
    transcription:
      mode: ${TRANSCRIPTION_MODE:whisper-webapp} # whisper-webapp, openai
      api-base-url: ${TRANSCRIPTION_URL:http://localhost:9000}
      api-token: ${TRANSCRIPTION_TOKEN}
    chat:
      mode: ${CHAT_MODE:ollama} # ollama, openai
      api-base-url: ${CHAT_URL:http://localhost:11434}
      api-token: ${CHAT_TOKEN:.}
      model-name: ${CHAT_MODEL:llama3}

spring:
  application:
    name: ${APP_NAME:SummarizeIt}
    description: ${APP_DESCRIPTION:Store and annotate your videos with ease!}
  web:
    resources:
      static-locations: file:/home/emo/storage, classpath:/static/
  mvc:
    static-path-pattern: /public/**
  jpa:
    hibernate:
      ddl-auto: ${DB_DDL_AUTO:update}
    properties:
      hibernate:
        show_sql: true
        format_sql: false
        globally_quoted_identifiers: true
    open-in-view: false
  datasource:
    url: jdbc:postgresql://${POSTGRESQL_HOST:localhost}:${POSTGRESQL_PORT:5432}/${POSTGRESQL_DB:app_db}
    username: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:secret}
  data:
    redis:
      database: ${REDIS_DATABASE:0}
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:secret}
      timeout: ${REDIS_TIMEOUT:60000}
    web:
      pageable:
        default-page-size: ${PAGEABLE_DEFAULT_PAGE_SIZE:20}
  servlet:
    multipart:
      max-file-size: ${MULTIPART_MAX_FILE_SIZE:5120MB}
      max-request-size: ${MULTIPART_MAX_REQUEST_SIZE:5120MB}
  messages:
    basename: locales.messages
    encoding: UTF-8
    cache-duration: ${MESSAGES_CACHE_DURATION:-1}
  jackson:
    mapper:
      accept-case-insensitive-enums: true
  thymeleaf:
    enabled: true
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    cache: false
  mail:
    host: ${MAIL_HOST:localhost}
    port: ${MAIL_PORT:1025}
    username: ${MAIL_USERNAME:test@email.com}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          ssl:
            enable: ${MAIL_SSL:false}
          tls:
            enable: ${MAIL_TLS:false}
  docker:
    compose:
      lifecycle-management: none
  content:
    storage-root: /home/emo/storage

springdoc:
  api-docs:
    enabled: ${API_DOCS_ENABLED:true}
    path: /api-docs
  swagger-ui:
    enabled: ${SWAGGER_ENABLED:true}
    operationsSorter: alpha
    tagsSorter: alpha
    path: ${SWAGGER_PATH:/swagger-ui}
  show-actuator: false

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    org:
      hibernate:
        type: ${LOGGING_LEVEL_HIBERNATE:INFO}
      springframework:
        web: ${LOGGING_LEVEL_SPRING:INFO}
  file:
    name: ./var/logs/app.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  logback:
    rollingpolicy:
      file-name-pattern: ./var/logs/app.%d{yyyy-MM-dd}.%i.log
